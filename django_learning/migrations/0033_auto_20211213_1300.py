# Generated by Django 3.1.2 on 2021-12-13 13:00

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import picklefield.fields


class Migration(migrations.Migration):

    dependencies = [
        ('django_learning', '0032_auto_20211213_1200'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='classificationmodel',
            name='cv_folds_test',
        ),
        migrations.RemoveField(
            model_name='project',
            name='inactive_coders',
        ),
        migrations.AlterField(
            model_name='classificationmodel',
            name='cv_folds',
            field=picklefield.fields.PickledObjectField(editable=False, help_text='Indices of the cross-validation folds', null=True),
        ),
        migrations.AlterField(
            model_name='classificationmodel',
            name='dataset_cache_hash',
            field=models.CharField(help_text='A unique caching hash for the training dataset, based on the current parameters', max_length=256, null=True),
        ),
        migrations.AlterField(
            model_name='classificationmodel',
            name='model_cache_hash',
            field=models.CharField(help_text='A unique caching hash for the ML model, based on the current parameters', max_length=256, null=True),
        ),
        migrations.AlterField(
            model_name='classificationmodel',
            name='project',
            field=models.ForeignKey(help_text='Coding project associated with the model', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='django_learning.project'),
        ),
        migrations.AlterField(
            model_name='classificationmodel',
            name='test_dataset_cache_hash',
            field=models.CharField(help_text='A unique caching hash for the test dataset, based on the current parameters', max_length=256, null=True),
        ),
        migrations.AlterField(
            model_name='documentclassificationmodel',
            name='sampling_frame',
            field=models.ForeignKey(help_text='Sampling frame that the model is associated with', on_delete=django.db.models.deletion.CASCADE, related_name='learning_models', to='django_learning.samplingframe'),
        ),
        migrations.AlterField(
            model_name='documentngramset',
            name='count',
            field=models.IntegerField(help_text='Number of matches in the document'),
        ),
        migrations.AlterField(
            model_name='documentngramset',
            name='document',
            field=models.ForeignKey(help_text='The document the NgramSet was applied to', on_delete=django.db.models.deletion.CASCADE, related_name='ngram_sets', to='django_learning.document'),
        ),
        migrations.AlterField(
            model_name='documentngramset',
            name='ngram_set',
            field=models.ForeignKey(help_text='The ngram set that was applied to the document', on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='django_learning.ngramset'),
        ),
        migrations.AlterField(
            model_name='documentngramset',
            name='percent',
            field=models.FloatField(help_text='Proportion of the document that matched to the ngram set'),
        ),
        migrations.AlterField(
            model_name='ngramset',
            name='dictionary',
            field=models.CharField(db_index=True, help_text='Dictionary the category belongs to', max_length=100),
        ),
        migrations.AlterField(
            model_name='ngramset',
            name='label',
            field=models.CharField(db_index=True, help_text='More verbose name for the category', max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='ngramset',
            name='name',
            field=models.CharField(db_index=True, help_text='Short name of the category', max_length=100),
        ),
        migrations.AlterField(
            model_name='ngramset',
            name='words',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), default=list, help_text='List of words in the category', size=None),
        ),
        migrations.AlterField(
            model_name='project',
            name='admins',
            field=models.ManyToManyField(help_text='Coders with admin privileges on the project', related_name='admin_projects', to='django_learning.Coder'),
        ),
        migrations.AlterField(
            model_name='project',
            name='coders',
            field=models.ManyToManyField(help_text='Coders on the project', related_name='projects', to='django_learning.Coder'),
        ),
        migrations.AlterField(
            model_name='project',
            name='instructions',
            field=models.TextField(help_text='Instructions to be displayed at the top of the coding interface', null=True),
        ),
        migrations.AlterField(
            model_name='project',
            name='mturk_sandbox',
            field=models.BooleanField(default=True, help_text='(default is True) whether or not the project is in sandbox mode (for the purposes of interacting with Mechanical Turk)'),
        ),
        migrations.AlterField(
            model_name='project',
            name='name',
            field=models.CharField(help_text='Name of the project (corresponds to a project config JSON file', max_length=250),
        ),
        migrations.AlterField(
            model_name='project',
            name='qualification_tests',
            field=models.ManyToManyField(help_text='Qualification tests that coders must take to qualify for the coding project', related_name='projects', to='django_learning.QualificationTest'),
        ),
    ]
